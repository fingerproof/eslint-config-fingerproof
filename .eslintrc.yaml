root: true
env:
  browser: false
  node: false
  commonjs: false
  worker: false
  amd: false
  mocha: false
  jasmine: false
  jest: false
  phantomjs: false
  protractor: false
  qunit: false
  jquery: false
  prototypejs: false
  shelljs: false
  meteor: false
  mongo: false
  applescript: false
  nashorn: false
  serviceworker: false
  embertest: false
  webextensions: false
  es6: false
ecmaFeatures:
  arrowFunctions: false
  binaryLiterals: false
  blockBindings: false
  classes: false
  defaultParams: false
  destructuring: false
  forOf: false
  generators: false
  modules: false
  objectLiteralComputedProperties: false
  objectLiteralDuplicateProperties: false
  objectLiteralShorthandMethods: false
  objectLiteralShorthandProperties: false
  octalLiterals: false
  regexUFlag: false
  regexYFlag: false
  restParams: false
  spread: false
  superInFunctions: false
  templateStrings: false
  unicodeCodePointEscapes: false
  globalReturn: false
  jsx: false
  experimentalObjectRestSpread: false
rules:
  # Possible errors
  comma-dangle:
    - 2
    - "never"
  no-cond-assign:
    - 2
    - "always"
  no-console: 1
  no-constant-condition: 2
  no-control-regex: 2
  no-debugger: 2
  no-dupe-args: 2
  no-dupe-keys: 2
  no-duplicate-case: 2
  no-empty-character-class: 2
  no-empty: 2
  no-ex-assign: 2
  no-extra-boolean-cast: 2
  no-extra-parens:
    - 2
    - "all"
  no-extra-semi: 2
  no-func-assign: 2
  no-inner-declarations:
    - 2
    - "both"
  no-invalid-regexp: 2
  no-irregular-whitespace: 2
  no-negated-in-lhs: 2
  no-obj-calls: 2
  no-regex-spaces: 2
  no-sparse-arrays: 2
  no-unexpected-multiline: 2
  no-unreachable: 2
  use-isnan: 2
  valid-jsdoc:
    - 2
    - prefer:
        returns: "return"
      requireReturn: false
      requireReturnType: true
      requireReturnDescription: false
      requireParamDescription: false
  valid-typeof: 2
  # Best practices
  accessor-pairs:
    - 2
    - getWithoutSet: true
      setWithoutGet: true
  block-scoped-var: 1
  complexity:
    - 2
    - 5
  consistent-return: 1
  curly:
    - 2
    - "all"
  default-case: 1
  dot-location:
    - 2
    - "property"
  dot-notation:
    - 2
    - allowKeywords: true
  eqeqeq:
    - 2
    - "allow-null"
  guard-for-in: 2
  no-alert: 2
  no-caller: 2
  no-case-declarations: 2
  no-div-regex: 2
  no-else-return: 2
  no-empty-label: 2
  no-empty-pattern: 2
  no-eq-null: 2
  no-eval: 2
  no-extend-native: 2
  no-extra-bind: 2
  no-fallthrough: 1
  no-floating-decimal: 2
  no-implicit-coercion: 0
  no-implied-eval: 2
  no-invalid-this: 2
  no-iterator: 2
  no-labels: 1
  no-lone-blocks: 2
  no-loop-func: 2
  no-magic-numbers:
    - 1
    - enforceConst: false
      detectObjects: false
  no-multi-spaces: 2
  no-multi-str: 2
  no-native-reassign: 2
  no-new-func: 2
  no-new-wrappers: 2
  no-new: 1
  no-octal-escape: 2
  no-octal: 2
  no-param-reassign:
    - 1
    - props: true
  no-process-env: 1
  no-proto: 2
  no-redeclare:
    - 2
    - builtinGlobals: true
  no-return-assign:
    - 2
    - "always"
  no-script-url: 2
  no-self-compare: 2
  no-sequences: 2
  no-throw-literal: 2
  no-unused-expressions:
    - 2
    - allowShortCircuit: false
      allowTernary: false
  no-useless-call: 2
  no-useless-concat: 2
  no-void: 1
  no-warning-comments: 1
  no-with: 2
  radix:
    - 2
    - "always"
  vars-on-top: 0
  wrap-iife:
    - 2
    - "outside"
  yoda:
    - 1
    - "always"
    - exceptRange: false
  # Strict mode
  strict:
    - 2
    - "function"
  # Variables
  init-declarations:
    - 2
    - "always"
  no-catch-shadow: 2
  no-delete-var: 2
  no-label-var: 2
  no-shadow-restricted-names: 2
  no-shadow:
    - 1
    - builtinGlobals: true
      hoist: "all"
  no-undef-init: 1
  no-undef: 2
  no-undefined: 1
  no-unused-vars:
    - 2
    - vars: 'all'
      args: 'after-used'
  no-use-before-define:
    - 2
    - "nofunc"
  # Node.js and CommonJS
  callback-return: 1
  global-require: 2
  handle-callback-err:
    - 2
    - "^err(or)?$"
  no-mixed-requires:
    - 1
    - grouping: true
  no-new-require: 2
  no-path-concat: 2
  no-process-exit: 1
  no-restricted-modules: 0
  no-sync: 1
  # Stylistic Issues
  array-bracket-spacing:
    - 2
    - "never"
  block-spacing:
    - 2
    - "always"
  brace-style:
    - 2
    - "stroustrup"
    - allowSingleLine: true
  camelcase:
    - 2
    - properties: "always"
  comma-spacing:
    - 2
    - before: false
      after: true
  comma-style:
    - 2
    - "last"
  computed-property-spacing:
    - 2
    - "never"
  consistent-this:
    - 2
    - "that"
  eol-last: 2
  func-names: 1
  func-style: 0
  id-length:
    - 1
    - min: 2
      properties: "always"
  id-match: 0
  indent:
    - 2
    - 2
    - SwitchCase: 0
      VariableDeclarator:
        var: 2
        let: 2
        const: 3
  jsx-quotes:
    - 2
    - "prefer-double"
  key-spacing:
    - 2
    - beforeColon: false
      afterColon: true
      mode: "strict"
  linebreak-style:
    - 2
    - "unix"
  lines-around-comment:
    - 2
    - beforeBlockComment: true
      afterBlockComment: false
      beforeLineComment: false
      afterLineComment: false
      allowBlockStart: true
      allowBlockEnd: true
      allowObjectStart: true
      allowObjectEnd: true
      allowArrayStart: true
      allowArrayEnd: true
  max-depth:
    - 2
    - 3
  max-len:
    - 1
    - 80
    - 4
    - ignoreComments: true
      ignoreUrls: true
  max-nested-callbacks:
    - 2
    - 2
  max-params:
    - 2
    - 3
  max-statements:
    - 2
    - 10
  new-cap:
    - 2
    - newIsCap: true
      capIsNew: true
  new-parens: 2
  newline-after-var: 0
  no-array-constructor: 2
  no-bitwise: 1
  no-continue: 1
  no-inline-comments: 0
  no-lonely-if: 2
  no-mixed-spaces-and-tabs: 2
  no-multiple-empty-lines:
    - 2
    - max: 1
  no-negated-condition: 0
  no-nested-ternary: 2
  no-new-object: 2
  no-plusplus:
    - 1
    - allowForLoopAfterthoughts: true
  no-restricted-syntax:
    - 2
    - "WithStatement"
  no-spaced-func: 2
  no-ternary: 0
  no-trailing-spaces:
    - 2
    - skipBlankLines: false
  no-underscore-dangle: 0
  no-unneeded-ternary:
    - 2
    - defaultAssignment: false
  object-curly-spacing:
    - 2
    - "always"
  one-var:
    - 2
    - "never"
  operator-assignment:
    - 1
    - "always"
  operator-linebreak:
    - 2
    - "before"
    - overrides:
        ?: "after"
  padded-blocks:
    - 2
    - "never"
  quote-props:
    - 2
    - "as-needed"
  quotes:
    - 2
    - "single"
  require-jsdoc: 1
  semi-spacing:
    - 2
    - before: false
      after: true
  semi:
    - 2
    - "always"
  sort-vars: 0
  space-after-keywords:
    - 2
    - "always"
  space-before-blocks:
    - 2
    - "always"
  space-before-function-paren:
    - 2
    - anonymous: "always"
      named: "never"
  space-before-keywords:
    - 2
    - "always"
  space-in-parens:
    - 2
    - "never"
  space-infix-ops:
    - 2
    - int32Hint: false
  space-return-throw-case: 2
  space-unary-ops:
    - 2
    - words: true
      nonwords: false
  spaced-comment:
    - 2
    - "always"
    - block:
        markers:
          - "*"
          - "!"
          - "global"
          - "eslint"
          - "eslint-env"
          - "eslint-enable"
          - "eslint-disable"
  wrap-regex: 0
  # ECMAScript 6
  # arrow-body-style:
  #   - 2
  #   - "as-needed"
  # arrow-parens:
  #   - 2
  #   - "as-needed"
  # arrow-spacing:
  #   - 2
  #   - before: true
  #     after: true
  # constructor-super: 2
  # generator-star-spacing:
  #   - 2
  #   - "before"
  # no-arrow-condition: 2
  # no-class-assign: 2
  # no-const-assign: 2
  # no-dupe-class-members: 2
  # no-this-before-super: 2
  # no-var: 2
  # object-shorthand:
  #   - 2
  #   - "always"
  # prefer-arrow-callback: 1
  # prefer-const: 1
  # prefer-reflect: 1
  # prefer-spread: 2
  # prefer-template: 2
  # require-yield: 2
